---
const { field } = Astro.props;

// Check if this field should use Quill.js (content, excerpt, body fields)
const useQuill = ['content', 'excerpt', 'body'].includes(field.key);
// Check if this field should use EasyMDE (no fields currently)
const useEasyMDE = [].includes(field.key);
---

{
  field.type === "textArea" && (
    <div class="col-span-4">
      <label
        for={field.key}
        class="block text-sm font-medium leading-6 text-gray-900"
      >
        {field.key}
      </label>
      <div class="mt-2">
        <textarea
          id={field.key}
          name={field.key}
          rows={useEasyMDE || useQuill ? "10" : "3"}
          class={`block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 ${useEasyMDE ? 'easymde-editor' : useQuill ? 'quill-editor' : 'bg-white'}`}
        >{field.value}</textarea>
      </div>
      <p class="mt-3 text-sm leading-6 text-gray-600">
        {useEasyMDE ? 'Supports Markdown formatting' : useQuill ? 'Rich text editor with formatting options' : 'Write a few sentences about yourself.'}
      </p>
    </div>
  )
}

{useEasyMDE && (
  <>
    <link rel="stylesheet" href="https://unpkg.com/easymde/dist/easymde.min.css">
    <script src="https://unpkg.com/easymde/dist/easymde.min.js"></script>
    <script define:vars={{ fieldKey: field.key }}>
      document.addEventListener('DOMContentLoaded', function() {
        const textarea = document.getElementById(fieldKey);
        if (textarea && window.EasyMDE) {
          const easyMDE = new window.EasyMDE({
            element: textarea,
            spellChecker: false,
            renderingConfig: {
              singleLineBreaks: false,
              codeSyntaxHighlighting: true,
            },
            toolbar: [
              'bold', 'italic', 'heading', '|',
              'code', 'quote', 'unordered-list', 'ordered-list', '|',
              'link', 'image', '|',
              'preview', 'side-by-side', 'fullscreen', '|',
              'guide'
            ],
            status: ['autosave', 'lines', 'words', 'cursor'],
            autofocus: false,
            placeholder: 'Start writing in Markdown...'
          });
        }
      });
    </script>
  </>
)}

{useQuill && (
  <>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script define:vars={{ fieldKey: field.key }}>
      document.addEventListener('DOMContentLoaded', function() {
        const textarea = document.getElementById(fieldKey);
        if (textarea && window.Quill) {
          // Create a container for Quill
          const container = document.createElement('div');
          container.style.minHeight = '200px';
          textarea.parentNode.insertBefore(container, textarea);
          textarea.style.display = 'none';

          // Initialize Quill
          const quill = new window.Quill(container, {
            theme: 'snow',
            placeholder: 'Start writing...',
            modules: {
              toolbar: [
                [{ 'header': [1, 2, 3, false] }],
                ['bold', 'italic', 'underline'],
                ['link'],
                [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                ['blockquote', 'code-block'],
                ['clean']
              ]
            }
          });

          // Set initial content if textarea has value
          if (textarea.value) {
            try {
              const delta = JSON.parse(textarea.value);
              quill.setContents(delta);
            } catch (e) {
              // If not JSON, treat as plain text
              quill.root.innerHTML = textarea.value;
            }
          }

          // Update textarea on change
          quill.on('text-change', function() {
            const delta = quill.getContents();
            textarea.value = JSON.stringify(delta);
          });
        }
      });
    </script>
  </>
)}
